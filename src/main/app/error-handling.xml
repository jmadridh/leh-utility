<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    
    
    <choice-exception-strategy name="global-exception-strategy">    
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)]" doc:name="Caused By (org.mule.module.http.internal.request.ResponseValidatorException)">
            <choice doc:name="Choice">
                <when expression="#[message.inboundProperties['http.status'] == 401]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Exception in the upstream service']"/>
                        <add-message-property key="errorMessage" value="#['Upstream service did not authorize the request']"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <set-variable variableName="stopLogWrite" value="#['true']" doc:name="Variable"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
                </when>
                <when expression="#[message.inboundProperties['http.status'] == 403]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Exception in the upstream service']"/>
                        <add-message-property key="errorMessage" value="#['Access to the upstream service is forbidden']"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <set-variable variableName="stopLogWrite" value="#['true']" doc:name="Variable"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
                </when>
                <when expression="#[message.inboundProperties['http.status'] &lt; 500]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Exception in the upstream service']"/>
                        <add-message-property key="errorMessage" value="#['Upstream service unable to fulfil request']"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <set-variable variableName="stopLogWrite" value="#['true']" doc:name="Variable"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>                    
                </when>
                <otherwise>
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Exception in the upstream service']"/>
                        <add-message-property key="errorMessage" value="#['Upstream service internal error']"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <set-variable variableName="stopLogWrite" value="#['true']" doc:name="Variable"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>                
                </otherwise>
            </choice>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.extension.validation.api.ValidationException)]" doc:name="Caused By (org.mule.extension.validation.api.ValidationException)">
            <choice doc:name="Choice">
                <when expression="#[message.inboundProperties['http.status'] == 401]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Upstream service did not authorize the request']"/>
                        <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
                </when>
                <when expression="#[message.inboundProperties['http.status'] == 403]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Access to the upstream service is forbidden']"/>
                        <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
                </when>
                <when expression="#[message.inboundProperties['http.status'] &lt; 500]">
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Upstream service unable to fulfil request']"/>
                        <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>                    
                </when>
                <otherwise>
                    <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                        <add-message-property key="errorType" value="#['Technical Exception']"/>
                        <add-message-property key="errorSummary" value="#['Upstream service internal error']"/>
                        <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                        <add-message-property key="errorCode" value="502"/>
                        <add-message-property key="errorSeverity" value="#['P3']"/>
                    </message-properties-transformer>
                    <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
                    <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>                
                </otherwise>
            </choice>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.util.concurrent.TimeoutException)]" doc:name="Caused By (java.util.concurrent.TimeoutException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unable to connect to upstream service. Request timed out']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="502"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>            
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.util.NoSuchElementException)]" doc:name="Caused By (java.util.NoSuchElementException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unable to connect to upstream service']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="502"/>
                <add-message-property key="errorSeverity" value="#['P3']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>            
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causeMatches('java.net')]" doc:name="Cause Matches ('java.net')">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unable to connect to upstream service']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="502"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>            
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]" doc:name="Caused By (org.mule.module.apikit.exception.NotFoundException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Resource Not Found']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="404"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="404" doc:name="Set Status"/>            
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]" doc:name="Caused By (org.mule.module.apikit.exception.MethodNotAllowedException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Method Not Allowed']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="405"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="405" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]" doc:name="Caused By (org.mule.module.apikit.exception.UnsupportedMediaTypeException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unsupported Media Type']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="415"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="415" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]" doc:name="Caused By (org.mule.module.apikit.exception.NotAcceptableException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unable to fullfil request']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="406"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="406" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]" doc:name="Caused By (org.mule.module.apikit.exception.BadRequestException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Request is not in the valid format']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="400"/>
                <add-message-property key="errorSeverity" value="#['P3']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="400" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <!-- newly added -->
        <catch-exception-strategy when="#[exception.causeMatches('com.mysql.*')]" doc:name="Caused By (com.mysql.jdbc.exceptions)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['SQL Exception']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="500"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causeMatches('java.sql.*')]" doc:name="Cause Matches (java.sql.exceptions)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['SQL Exception']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="500"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.lang.RuntimeException)]" doc:name="Caused by (java.lang.RuntimeException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorCode" value="500"/>
                <add-message-property key="errorSummary" value="#['Java Runtime Exception']"/>
                <add-message-property key="errorMessage" value="#['Unable to fullfil request due to internal error']"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(com.mulesoft.flatfile.lexical.LexicalException)]" doc:name="Caused By (com.mulesoft.flatfile.lexical.LexicalException)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Schema Validation Failure']"/>
                <add-message-property key="errorMessage" value="#[(exception.cause != null) ? (exception.cause.message) : exception]"/>
                <add-message-property key="errorCode" value="500"/>
                <add-message-property key="errorSeverity" value="#['P3']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>            
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causeMatches('com.ic.leh.CustomException*')]" doc:name="Caused By (Custom Exceptions)">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Business Exception']"/>
                <add-message-property key="errorSummary" value="#['Business Exception']"/>
                <add-message-property key="errorMessage" value="#[exception.cause.message]"/>
                <add-message-property key="errorCode" value="400"/>
                <add-message-property key="errorSeverity" value="#['P3']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="400" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
        <catch-exception-strategy doc:name="Default">
            <message-properties-transformer scope="invocation" doc:name="Set Error Details">
                <add-message-property key="errorType" value="#['Technical Exception']"/>
                <add-message-property key="errorSummary" value="#['Unable to fullfil request due to internal error.']"/>
                <add-message-property key="errorMessage" value="#[exception.cause.message]"/>
                <add-message-property key="errorCode" value="500"/>
                <add-message-property key="errorSeverity" value="#['P2']"/>
            </message-properties-transformer>
            <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
            <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
    
    <!-- <sub-flow name="global-bad-request-response-sub-flow">
        <set-property propertyName="http.status" value="400" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-sql-exceptions-sub-flow">
        <set-property propertyName="http.status" value="409" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" mimeType="application/java" doc:name="Set Error Code"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    Newly added
    <sub-flow name="global-integrity-constraint-violation-sub-flow">
        <set-property propertyName="http.status" value="409" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-resource-not-found-response-sub-flow">
        <set-property propertyName="http.status" value="404" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-method-not-allowed-response-sub-flow">
        <set-property propertyName="http.status" value="405" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-not-acceptable-response-sub-flow">
        <set-property propertyName="http.status" value="406" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-conflict-response-sub-flow">
        <set-property propertyName="http.status" value="409" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-unsupported-media-type-response-sub-flow">
        <set-property propertyName="http.status" value="415" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-internal-server-error-response-sub-flow">
        <set-property propertyName="http.status" value="500" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" doc:name="Set Error Code" mimeType="application/java"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow>
    <sub-flow name="global-bad-gateway-response-sub-flow">
        <set-property propertyName="http.status" value="502" doc:name="Set Status"/>
        <set-payload value="#[app.registry.statuses.get(message.outboundProperties['http.status'])]" mimeType="application/java" doc:name="Set Error Code"/>
        <flow-ref name="global-prepare-error-response-sub-flow" doc:name="global-prepare-error-response-sub-flow"/>
    </sub-flow> -->
    
    <sub-flow name="global-prepare-error-response-sub-flow">
        <logger message="{ &quot;transaction&quot;: &quot;#[flowVars.transactionId]&quot;, &quot;isError&quot;: &quot;#[flowVars.errorRaised]&quot;, &quot;response&quot;: &quot;#[message.outboundProperties['http.status']]&quot;, &quot;errorCode&quot;: &quot;#[flowVars.errorCode]&quot;, &quot;errorMessage&quot;: &quot;#[flowVars.errorMessage != null ? flowVars.errorMessage : '']&quot;, &quot;errorDescription&quot;: &quot;#[flowVars.errorSummary != null ? flowVars.errorDescription : '']&quot; }" level="ERROR" doc:name="Logger" category="Audit"/>
        <set-variable variableName="errorRaised" value="#[true]" doc:name="Set Error Raised"/>
        <dw:transform-message doc:name="Create Error Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json encoding="UTF-8", skipNullOn="everywhere"
---
{
	status: "error",
	error: {
		errorCode: flowVars.errorCode,
		errorDateTime: now as :string { format: "yyyy-MM-dd'T'HH:mm:ssZ" },
		errorType: flowVars.errorType,
		errorSummary: flowVars.errorSummary,
		errorMessage: flowVars.errorMessage
		//(errorSeverity: flowVars.errorSeverity) when flowVars.errorSeverity != null
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String"/>
        <flow-ref name="leh-common-trans-log-error-subflow" doc:name="leh-common-trans-log-error-subflow"/>
    </sub-flow>
    
</mule>
